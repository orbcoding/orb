#!/bin/bash
orb_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )
# [[ -n "$caller_info" ]] && eval "$(echo -e "$caller_info")"

# https://unix.stackexchange.com/a/48550
# Exit 77 will exit entire script even from subshell
set -E
trap '[ "$?" -ne 77 ] || (exit 77)' ERR

function orb() {
	source "$orb_dir/core/helpers/help.sh"
	[[ "$1" == '--help' ]] && print_global_help && exit 0

	source "$orb_dir/core/helpers/core.sh"
	source "$orb_dir/core/helpers/bootstrap.sh"
	source "$orb_dir/scripts/utils/dev.sh"
	source "$orb_dir/scripts/text/format.sh"
	source "$orb_dir/core/internal_caller_handler.sh"

	scripts=( orb git utils text )

	if [[ " ${scripts[@]} " =~ " ${1} " ]]; then
		# Specified script tag
		script_name="$1"
		shift
	else
		script_name=orb
	fi

	# First argument is function name
	function_name=$1; shift

	script_dir="$orb_dir/scripts/$script_name"

	source "$orb_dir/core/script_file_sourcer.sh"
	handle_function_is_help_or_missing
	source "$orb_dir/core/arguments_collector.sh"
	unset_all_functions_except_called_and_wrapper
	# source "$orb_dir/core/orb_wrapper.sh"

	# Re source script extensions to allow internal calls without orb prefix
	if [[ -n $orb_extensions && -f $orb_extensions/${script_name}.sh ]]; then
		source "$orb_extensions/${script_name}.sh"
	fi

	# Call function
	PROC=$$
	$function_name "${args_nrs[@]}" "${args_wildcard[@]}"
}

orb "$@"
