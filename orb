#!/bin/bash
orb_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )

function orb() {
	# Overriding nested orb calls with internal function to access caller info in utils
	# Run nested calls in subshell to prevent changing parent environment
	(
		for f in $orb_dir/core/helpers/*; do source "$f"; done
		source "$orb_dir/core/internal_caller_handler.sh"
		source "$orb_dir/scripts/utils/dev.sh"
		source "$orb_dir/scripts/text/format.sh"

		scripts=( orb git utils text )

		if [[ " ${scripts[@]} " =~ " ${1} " ]]; then
			# Specified script tag
			script_name="$1"
			shift
		else
			script_name=orb
		fi

		# First argument is function name
		function_name=$1; shift

		script_dir="$orb_dir/scripts/$script_name"

		source "$orb_dir/core/script_file_sourcer.sh"
		handle_function_is_help_or_missing

		source "$orb_dir/core/arguments_collector.sh"

		# Effectively enforcing orb prefix
		unset_all_functions_except_called_and_wrapper

		# Re source script extensions to allow user function calls without orb prefix
		if [[ -n $orb_extensions && -f $orb_extensions/${script_name}.sh ]]; then
			source "$orb_extensions/${script_name}.sh"
		fi

		# Call function
		$function_name "${args_nrs[@]}" "${args_wildcard[@]}"
	)
}

orb "$@"
