#!/bin/bash
# This script is bash >= 4.3 only
#
# Because use eg:
# - arrays. Not supported in sh and in zsh indexes start at 1 instead of 0.
# - local function variables. Not supported in classic sh shells.
# - FUNCNAME and BASH_SOURCE lookup. Would have to be adapted for each shell if supported at all.
# - double bracket regex conditions.
# - associative arrays (used sparsely). requires bash_version >= 4
# - declare and namerefs. requires bash_version >= 4.3, released 2014
#   https://wiki.bash-hackers.org/commands/builtin/declare#nameref
#

if [ -z "$BASH" ]; then
  echo "Please use orb with bash" && return 1
elif ! (( ${BASH_VERSINFO[0]}${BASH_VERSINFO[1]} >= 43 )); then
  echo "Please use a bash version >= 4.3" && return 1
fi

# Set project root
_orb_dir="${BASH_SOURCE[0]}"
_orb_dir="${_orb_dir%/*/*}"

if [ ! $_orb_initialized ]; then
  source "$_orb_dir/lib/scripts/initialize.sh"

  # Prefer declaring orb function here for minimal stack trace
  orb() {
    source "$_orb_dir/lib/scripts/source/extensions.sh"
    source "$_orb_dir/lib/scripts/call/variables.sh"
    source "$_orb_dir/lib/scripts/orb_arguments.sh"
    source "$_orb_dir/lib/scripts/call/history.sh"
    source "$_orb_dir/lib/scripts/call/preparation.sh"

    $_orb_setting_reload_functions && local _orb_function_dump="$(declare -f)"

    source "$_orb_dir/lib/scripts/source/presource.sh"

    _orb_collect_orb_namespace_files
    _orb_handle_help_requested && exit 0

    source "$_orb_dir/lib/scripts/source/function.sh"

    _orb_parse_orb_prefixed_args "$@"

    # Call function
    $_orb_function "${_orb_positional[@]}"
    local _orb_function_exit_code=$?

    _orb_setting_reload_functions && eval "$_orb_function_dump" && unset _orb_function_dump

    return $_orb_function_exit_code
  }

  _orb_initialized=1
fi

source "$_orb_dir/lib/scripts/handle_orb_sourced.sh" || orb "$@"
